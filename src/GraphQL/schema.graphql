# import Profile from "bitrix/profile.graphql"
# import WorkGroup from "bitrix/workGroup.graphql"
# import WorkGroupShort from "bitrix/workGroup.graphql"
# import WorkGroupResponse from "bitrix/workGroup.graphql"
# import BitrixUser from "bitrix/user.graphql"
# import Task from "bitrix/task.graphql"
# import TaskDetail from "bitrix/task.graphql"
# import TaskComment from "bitrix/task.graphql"
# import SendTaskMessageResponse from "bitrix/taskMessage.graphql"
# import FeedMessageResponse from "bitrix/feedMessage.graphql"
# import DeleteTaskMessageResponse from "bitrix/taskMessage.graphql"
# import FeedResponse from "bitrix/feed.graphql"
# import AttachmentResponse from "bitrix/attachment.graphql"
# import YandexMetrikaApiResponse from "yandexMetrika/data.graphql"
# import Counter from "yandexMetrika/counter.graphql"
# import Project from "topvisor/project.graphql"
# import PositionResponse from "topvisor/positions.graphql"
# import SummaryChartResponse from "topvisor/summaryChart.graphql"

scalar UploadFix

type Query {
  GetProfile: Profile!
  GetUserGroups(start: Int = 0): WorkGroupResponse
  GetGroupById(groupId: ID!): WorkGroup
  SearchGroupByName(name: String!): [WorkGroup]!
  GetGroupsUsers(groupId: ID!): [BitrixUser]!
  GetGroupsTasks(groupId: ID!): [Task]!
  GetTaskByID(taskId: ID!): TaskDetail
  GetUserByID(userId: ID!): BitrixUser
  GetTaskComments(taskId: ID!): [TaskComment]!
  GetFeed(start: Int = 0, filter: [String]): FeedResponse!
  GetAttachment(id: ID!): AttachmentResponse!
  GetYandexMetrics(
    metrics: String
    dimensions: String
    date1: String
    date2: String
    bitrixGroupId: ID!
    preset: String
  ): YandexMetrikaApiResponse!
  GetCounter(bitrixGroupId: ID!): Counter!
  GetTopvisorProject(bitrixGroupId: ID!): Project
  GetTopvisorPositions(
    bitrixGroupId: ID!
    projectId: ID!
    regionIndexes: [ID!]!
    date1: String!
    date2: String!
  ): PositionResponse!
  GetTopvisorSummaryChart(
    bitrixGroupId: ID!
    projectId: ID!
    regionIndex: ID!
    date1: String!
    date2: String!
  ): SummaryChartResponse
}

type Mutation {
  SendTaskMessage(
    taskId: ID!
    message: String!
  ): SendTaskMessageResponse!
  SendFeedMessage(
    title: String
    message: String!
    files: [UploadFix]
    showFor: [String]
  ): FeedMessageResponse!
  DeleteTaskMessage(taskId: ID! messageId: ID!): DeleteTaskMessageResponse!
}
